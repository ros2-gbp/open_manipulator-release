%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/kilted/.*$
%global __requires_exclude_from ^/opt/ros/kilted/.*$

Name:           ros-kilted-open-manipulator-bringup
Version:        4.0.6
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS open_manipulator_bringup package

License:        Apache 2.0
URL:            http://wiki.ros.org/open_manipulator
Source0:        %{name}-%{version}.tar.gz

Requires:       ros-kilted-dynamixel-hardware-interface
Requires:       ros-kilted-gz-ros2-control
Requires:       ros-kilted-open-manipulator-description
Requires:       ros-kilted-rclpy
Requires:       ros-kilted-robot-state-publisher
Requires:       ros-kilted-ros-gz-bridge
Requires:       ros-kilted-ros-gz-image
Requires:       ros-kilted-ros-gz-sim
Requires:       ros-kilted-ros2-control
Requires:       ros-kilted-ros2-controllers
Requires:       ros-kilted-rviz2
Requires:       ros-kilted-xacro
Requires:       ros-kilted-ros-workspace
BuildRequires:  python%{python3_pkgversion}-devel
BuildRequires:  ros-kilted-dynamixel-hardware-interface
BuildRequires:  ros-kilted-rclpy
BuildRequires:  ros-kilted-ros-gz-bridge
BuildRequires:  ros-kilted-ros-gz-image
BuildRequires:  ros-kilted-ros-gz-sim
BuildRequires:  ros-kilted-ros-workspace
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%description
OpenMANIPULATOR bringup ROS 2 package.

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kilted/setup.sh" ]; then . "/opt/ros/kilted/setup.sh"; fi
%py3_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kilted/setup.sh" ]; then . "/opt/ros/kilted/setup.sh"; fi
%py3_install -- --prefix "/opt/ros/kilted"

%if 0%{?with_tests}
%check
# Look for a directory with a name indicating that it contains tests
TEST_TARGET=$(ls -d * | grep -m1 "\(test\|tests\)" ||:)
if [ -n "$TEST_TARGET" ] && %__python3 -m pytest --version; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kilted/setup.sh" ]; then . "/opt/ros/kilted/setup.sh"; fi
%__python3 -m pytest $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/kilted

%changelog
* Tue Jul 15 2025 Pyo <pyo@robotis.com> - 4.0.6-1
- Autogenerated by Bloom

* Tue Jul 08 2025 Pyo <pyo@robotis.com> - 4.0.5-1
- Autogenerated by Bloom

* Tue Jun 24 2025 Pyo <pyo@robotis.com> - 4.0.1-1
- Autogenerated by Bloom

* Sat Apr 26 2025 Pyo <pyo@robotis.com> - 3.2.2-1
- Autogenerated by Bloom

* Tue Apr 22 2025 Pyo <pyo@robotis.com> - 3.2.1-2
- Autogenerated by Bloom

* Mon Apr 14 2025 Pyo <pyo@robotis.com> - 3.2.1-1
- Autogenerated by Bloom

